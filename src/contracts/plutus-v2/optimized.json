{
  "preamble": {
    "title": "golddyev/marketplace-sc-old",
    "description": "Aiken contracts for project 'golddyev/marketplace-sc-old'",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "compiler": {
      "name": "Aiken",
      "version": "v1.0.29-alpha+16fb02e"
    },
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "marketplace.spend",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/marketplace~1types~1MarketplaceDatum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/marketplace~1MarketplaceRedeemer"
        }
      },
      "parameters": [
        {
          "title": "marketplace_address",
          "schema": {
            "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
          }
        },
        {
          "title": "authorizers",
          "schema": {
            "$ref": "#/definitions/List$ByteArray"
          }
        }
      ],
      "compiledCode": "59054201000032323232323232223223232322322533300b32323232533300f300a3010375400e264646464646464646464646464a666038646600200203444a66604200229404c94ccc07ccc04401cdd718120010a5113300300300130240011300a333006001002003133223232323232325333027302a0021323232533302a302d0021323253330290091533302900815333029001100214a0294052819b8900b375a6054004602c0062c60560026eacc09c008dd718128008b18140009bab30270033375e604c00604066ebcc094c09800401cc094004c080dd5001181080099b833370666e08ccc018c08800400930103d879800048191206248190ccc018018dd618100021bad3020301d37540266eb0c07cc070dd500b19ba548010cc074dd49b94376601897ae03758603a603c603c603c603c603c603c002603a603a60326ea802c888c8c8c8c8c94ccc078cdd7981198120010030991919299981099baf30260020061325333025302800513232325333028302b002132533302630150041533302653330263371200c0022602800c29404cdc000329998148040a400026602401a0102c2c6eb4c09c00458c0a4004dd598128011bae302300116302600416375a604a604c00260426ea8c090020c09001c58dd5981100098110011810000980e1baa301f004301f003222533301833712900a0008999801801980f180f180f180f180f180f180f180f180f180f00119b800014804c4cc020008004c004004888c8c8c8c8c94ccc06ccdd79810181080126103d87980001323232533301e3375e604600400c264a666044604a00a2646464a66604a6050004264a66604660240082a666046a66604666e240180044c044018528099b8000653330260081480004ccc0400400340205858dd698120008b18130009bab3022002375c60400022c60460082c6eb4c088c08c004c078dd5181080398108030b1bab301f001301f002301d00130193754603800660380046e212000371e9110030010012225333012300d0011002133300300330180023370000290008998009bac301430153015301530153015301530153015301137540066eb8c050c054c044dd500591191980080080191299980a8008a5013253330133371e6eb8c060008010528899801801800980c000992999807180418079baa00113013301037540022c602460260046022002601a6ea80045261365632533300a300500113232533300f3012002149858dd6980800098061baa0021533300a30040011533300d300c37540042930b0b18051baa001325333008300330093754008264646464a66601e60240042649319198008008021129998088008a4c26466006006602a00464a66601e601460206ea80044c8c8c8c94ccc058c0640084c9265333013300e30143754006264646464a666034603a004264649319299980c980a00089919299980f181080109924c64a666038602e00226464a666042604800426493180b8008b1811000980f1baa0021533301c3016001132323232323253330253028002149858dd6981300098130011bad30240013024002375a6044002603c6ea800858c070dd50008b180f800980d9baa0031533301930130011533301c301b37540062930b0b180c9baa002301000316301b001301b0023019001301537540062c2c6eb4c05c004c05c008c054004c044dd50008b18098008b1bae301000130100023758601c00260146ea8010588c94ccc024c0100044c8c94ccc038c04400852616375c601e00260166ea800854ccc024c00c0044c8c94ccc038c04400852616375c601e00260166ea800858c024dd50009b8748008dc3a40006eb00055cd2ab9d5573caae7d5d02ba157441",
      "hash": "663460fd9802a24f252e03a221e9788ddb4c975f6cc05adbf269e2f4"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "List$ByteArray": {
      "dataType": "list",
      "items": {
        "$ref": "#/definitions/ByteArray"
      }
    },
    "List$marketplace/types/Payout": {
      "dataType": "list",
      "items": {
        "$ref": "#/definitions/marketplace~1types~1Payout"
      }
    },
    "Option$aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Optional",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "aiken/transaction/credential/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKeyCredential",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "ScriptCredential",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Referenced",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "marketplace/MarketplaceRedeemer": {
      "title": "MarketplaceRedeemer",
      "description": "A user can either buy a token\n or cancel/update the listing.",
      "anyOf": [
        {
          "title": "Buy",
          "description": "`payout_outputs_offset` tells us where\n the outputs containing the payouts start.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payout_outputs_offset",
              "$ref": "#/definitions/Int"
            }
          ]
        },
        {
          "title": "WithdrawOrUpdate",
          "description": "Cancel or update a listing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "marketplace/types/MarketplaceDatum": {
      "title": "MarketplaceDatum",
      "description": "A listing requires a datum that has\n the owner's payment key and a list of payouts.\n We do not need to specify the marketplace payout\n in `payouts` even though it will be in\n one of the outputs.",
      "anyOf": [
        {
          "title": "MarketplaceDatum",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payouts",
              "description": "Does not contain the marketplace payout.\n This is usually royalty and seller payouts.",
              "$ref": "#/definitions/List$marketplace~1types~1Payout"
            },
            {
              "title": "owner",
              "description": "Flexible to allow discounts\n The key that listed the NFT",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "marketplace/types/Payout": {
      "title": "Payout",
      "anyOf": [
        {
          "title": "Payout",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "address",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "amount_lovelace",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    }
  }
}
